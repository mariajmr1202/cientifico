{"version":3,"sources":["webpack://cientifico/./src/templates/Header.js","webpack://cientifico/./src/utils/getData.js","webpack://cientifico/./src/utils/getHash.js","webpack://cientifico/./src/pages/Error404.js","webpack://cientifico/./src/routes/index.js","webpack://cientifico/./src/pages/Home.js","webpack://cientifico/./src/pages/Characters.js","webpack://cientifico/./src/utils/resolveRoutes.js","webpack://cientifico/./src/index.js"],"names":["API","async","apiURL","id","response","fetch","json","err","console","log","location","hash","slice","toLocaleLowerCase","split","routes","getData","results","map","character","image","name","join","getHash","episode","length","status","species","gender","origin","header","document","getElementById","content","innerHTML","route","resolveRoutes","render","Error404","window","addEventListener","router"],"mappings":"mBAAA,MCAMA,EAAM,6CAaZ,EAXgBC,UACd,MAAMC,EAASC,EAAM,GAAEH,IAAMG,IAAOH,EACpC,IACE,MAAMI,QAAiBC,MAAMH,GAE7B,aADmBE,EAASE,OAE5B,MAAOC,GACPC,QAAQC,IAAI,cAAeF,KCN/B,EAHgB,IACdG,SAASC,KAAKC,MAAM,GAAGC,oBAAoBC,MAAM,KAAK,IAAM,cCQ9D,EATiB,IACD,yECMVC,EAAS,CACb,cCNWd,SAEG,gDADWe,KAGRC,QACVC,KACEC,GAAe,wEAEDA,EAAUhB,kCACTgB,EAAUC,eAAeD,EAAUE,6BACzCF,EAAUE,gEAKrBC,KAAK,uBDRZ,OENgBrB,UAChB,MAAME,EAAKoB,IACLJ,QAAkBH,EAAQb,GAiBhC,MAhBc,oGAGIgB,EAAUC,eAAeD,EAAUE,uBACzCF,EAAUE,sGAGMF,EAAUK,QAAQC,kDACpBN,EAAUO,kDACTP,EAAUQ,kDACXR,EAAUS,kDACVT,EAAUU,OAAOR,uDACVF,EAAUT,SAASW,sDFRpD,WAAY,WAcd,EAXepB,UACb,MAAM6B,EAAiBC,SAASC,eAAe,UACzCC,EAAkBF,SAASC,eAAe,WAEhDF,EAAOI,eJhBO,wPIiBd,IAAIvB,EAAOY,IACPY,OGnBiBA,IACjBA,EAAMV,QAAU,EACS,gBAAVU,EAA0BA,EAAQ,OAG7C,IAAGA,IHcOC,CAAczB,GAC5B0B,EAAStB,EAAOoB,GAASpB,EAAOoB,GAASG,EAC7CL,EAAQC,gBAAkBG,KIlB5BE,OAAOC,iBAAiB,OAAQC,GAChCF,OAAOC,iBAAiB,aAAcC,I","file":"main.js","sourcesContent":["const Header = () => {\n  const view = `\n    <div class=\"header-main\">\n      <div class=\"header-logo\">\n        <h1>\n          <a href=\"/\">100tifi.co</a>\n        </h1>\n      </div>\n      <nav class=\"header-nav\">\n        <a href=\"#/about/\">About</a>\n      </nav>\n    </div>\n  `;\n  return view;\n};\n\nexport default Header;\n","const API = \"https://rickandmortyapi.com/api/character/\";\n\nconst getData = async (id) => {\n  const apiURL = id ? `${API}${id}` : API;\n  try {\n    const response = await fetch(apiURL);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.log(\"Fetch error\", err);\n  }\n};\n\nexport default getData;\n","const getHash = () =>\n  location.hash.slice(1).toLocaleLowerCase().split(\"/\")[1] || \"/cientifico\";\n\nexport default getHash;\n\n/*\n\n- location.hash trae el fragmento de la url a partir de donde encuentre un #. En este caso traería #/1/\n- .slice(1) corta la url y muestra a partir del primer elemento. En este Caso el resultado es /1/\n- .toLocaleLowerCase() convierte a minúscula la cadena\n- .split(’/’) separa la cadena en un array, y elimina el / quedando un espacio vacio Ej [’’, ‘1’ ,’’]\n- [1] trae el primer elemento del split anterior que en este caso es 1 (representa la id 1)\n\n*/\n","const Error404 = () => {\n  const view = `\n    <div class=\"error404\">\n      <h2>Error 404</h2>\n    </div>\n  `;\n  return view;\n};\n\nexport default Error404;\n","import Header from \"../templates/Header\";\nimport Home from \"../pages/Home\";\nimport Character from \"../pages/Characters\";\nimport Error404 from \"../pages/Error404\";\nimport getHash from \"../utils/getHash\";\nimport resolveRoutes from \"../utils/resolveRoutes\";\n\nconst routes = {\n  \"/cientifico\": Home,\n  \"/:id\": Character,\n  \"/contact\": \"Contact\",\n};\n\nconst router = async () => {\n  const header = null || document.getElementById(\"header\");\n  const content = null || document.getElementById(\"content\");\n\n  header.innerHTML = await Header();\n  let hash = getHash();\n  let route = await resolveRoutes(hash);\n  let render = routes[route] ? routes[route] : Error404;\n  content.innerHTML = await render();\n};\n\nexport default router;\n","import getData from \"../utils/getData\";\n\nconst Home = async () => {\n  const characters = await getData();\n  const view = `\n    <div class=\"characters\">\n      ${characters.results\n        .map(\n          (character) => `\n          <article class=\"character-item\">\n            <a href=\"#/${character.id}/\">\n              <img src=\"${character.image}\" alt=\"${character.name}\">\n              <h2>${character.name}</h2>\n            </a>\n          </article>\n        `\n        )\n        .join(\"\")} \n    </div>\n  `;\n  return view;\n};\n\n//El .join(\"\") al final del .map es para que no lo convierta en un arreglo y no salgan las \"\" en el html\n\nexport default Home;\n","import getHash from \"../utils/getHash\";\nimport getData from \"../utils/getData\";\n\nconst Character = async () => {\n  const id = getHash();\n  const character = await getData(id);\n  const view = `\n    <div class=\"character-inner\">\n      <article class=\"characters-card1\">\n        <img src=\"${character.image}\" alt=\"${character.name}\">\n        <h2>${character.name}</h2>\n      </article>\n      <article class=\"characters-card2\">\n        <h3>Episodes: <span>${character.episode.length}</span> </h3>\n        <h3>Status: <span>${character.status}</span></h3>\n        <h3>Species: <span>${character.species}</span></h3>\n        <h3>Gender: <span>${character.gender}</span> </h3>\n        <h3>Origin: <span>${character.origin.name}</span> </h3>\n        <h3>Last Location: <span>${character.location.name}</span></h3>\n      </article>\n    </div>\n  `;\n  return view;\n};\n\nexport default Character;\n","const resolveRoutes = (route) => {\n  if (route.length <= 3) {\n    let validRoute = route === \"/cientifico\" ? route : \"/:id\";\n    return validRoute;\n  }\n  return `/${route}`;\n};\n\nexport default resolveRoutes;\n","import router from \"./routes\";\n// import \"./styles/styles.css\";\n\nwindow.addEventListener(\"load\", router);\nwindow.addEventListener(\"hashchange\", router);\n"],"sourceRoot":""}